dnl SPDX-License-Identifier: MIT
dnl
dnl Copyright (c) 2021 Sartura Ltd.
dnl
include(`modules/base.docker')dnl

setdef(`_TDISTRO_', `gentoo')dnl

ifelse(index(_TDISTRO_, `gentoo'),0,`dnl
include(`modules/system.docker')dnl
')dnl

setdef(`__debootstrap_release__', `stable')dnl
setdef(`__debootstrap_url__',     `http://deb.debian.org/debian/')dnl

setdef(`__kernel_remote__', `https://github.com/sartura/linux.git')dnl
setdef(`__kernel_config__', `./config/kernel/armada7040-prestera_5.15.y_config')dnl
setdef(`__kernel_branch__', `marvell/prestera-5.15.32')dnl

include(`modules/kernel.docker')dnl

# Install target architecture packages
ifelse(index(_TDISTRO_, `gentoo'),0,`dnl
COPY ./repos/replica /var/db/repos/replica
copy ./repos/switch  /var/db/repos/switch
COPY ./config/portage         ${SYSROOT}/etc/portage
RUN __renv__ __rdistfiles__ __rccache__ \
    set_repository_conf ${SYSROOT} replica 100 && \
    set_repository_conf ${SYSROOT} switch 101 && \
    set_portage_profile ${SYSROOT} switch replica/_BTARGET_ && \
    cross-emerge -vt --keep-going=n --deep --with-bdeps=y --newuse --newrepo @world

dnl # Common snippets to clean and configure system
include(`modules/cleanup.docker')dnl
include(`modules/configure.docker')dnl
')dnl

ifelse(index(_TDISTRO_, `debian'),0,`dnl
RUN __renv__ __rdistfiles__ __rccache__ \
    mv ${SYSROOT}/boot          /usr/src/boot && \
    mv ${SYSROOT}/lib/modules   /usr/src/modules && \
    rm -rf                      ${SYSROOT}/* && \
    debootstrap \
        --arch=${TPARCH} \
        --no-merged-usr \
        --cache-dir=/var/cache/distfiles \
ifdef(`__debootstrap_include__', `dnl
        --include="gpg,dirmngr,debian-keyring,fancontrol,__debootstrap_include__" \
')dnl
ifdef(`__debootstrap_exclude__', `dnl
        --exclude="__debootstrap_exclude__" \
')dnl
        "__debootstrap_release__" ${SYSROOT} "__debootstrap_url__" && \
    sed -i "s/root:\*:/root\:\$6\$MIf334fS6fTaKihG\$FAoUg\.iIq0WSq\.zZ\.UZ70HrACKRkv9ZGBucyOsXk8hZpqCbkfdo7x\/UVhq7L5Lzd5HTNINQTCcAXttuqSBe070:/" \
        ${SYSROOT}/etc/shadow && \
    mv -f /usr/src/boot         ${SYSROOT}/ && \
    mv -f /usr/src/modules      ${SYSROOT}/lib/ || ( cat ${SYSROOT}/debootstrap/debootstrap.log; exit 1 )
')dnl

# Target-specific filesystem cleanup and configuration
RUN \
    # NOTE: The watchdog hardware needs to be utilized to avoid device "crashes".
    sed -i '/#RuntimeWatchdogSec/c\RuntimeWatchdogSec=20s' \
        ${SYSROOT}/etc/systemd/system.conf

# Copy system policies from the Docker context
COPY ./overlay/armada7040-prestera ${SYSROOT}/
COPY ./overlay/_BTARGET_ ${SYSROOT}/

# Packaging utilities
COPY ./scripts/mkits.sh            /usr/local/bin/
COPY ./scripts/ubinize-image.sh    /usr/local/bin/
COPY ./scripts/armada7040-prestera /usr/local/bin/
COPY ./targets/_BTARGET_.package   /docker-entrypoint.sh
ENTRYPOINT ["/docker-entrypoint.sh"]

# Inject target variable into the environment
ENV BTARGET=_BTARGET_
ENV TDISTRO=_TDISTRO_
